{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["TYPES","CODEC","COLOR_PALLETE","arrowBox","val","document","body","style","cursor","Option","setVal","setToggle","className","height","onClick","Select","data","value","setValue","id","useState","toggle","useEffect","cickEvent","e","console","log","target","addEventListener","removeEventListener","marginRight","marginLeft","prev","background","display","justifyContent","alignItems","paddingLeft","paddingRight","width","color","size","position","boxShadow","paddingTop","flexDirection","map","d","i","index","NavBar","navRef","undo","fillColorRef","fillColor","setFillColor","setType","type","codec","resolution","setResolution","setCodec","clearRect","setColor","colorRef","ctx","bgColor","setBgColor","setSize","ref","current","globalCompositeOperation","onErase","onChangeCapture","htmlFor","min","max","defaultValue","onChange","onMouseUp","colorformat","BoxTools","path","setPaths","fill","useRef","length","App","canvasRef","window","innerHeight","innerWidth","paths","drawing","setDrawing","keyCode","setKeyCode","idChoose","setIdChoose","x","y","last","setLast","selects","setSelect","lastPos","useLayoutEffect","canvas","getContext","redraw","makeRect","element","strokeStyle","fillStyle","lineWidth","beginPath","fillRect","pos","x1","y1","x2","y2","strokeRect","stroke","closePath","lineCap","lineJoin","forEach","p","X1","X2","Y1","subtractXs","subtractYs","ellipse","Math","PI","makeCircle","moveTo","lineTo","undefined","makePath","makeConnectLine","image","Image","img","toDataURL","src","getElementById","href","push","pop","choose","temp","keydown","findIndex","keyup","preventDefault","stopPropagation","lastX","offsetX","pageX","offsetLeft","lastY","ostartX","pageY","offsetTop","startX","startY","endX","endY","j","array","slice","sec","shift","moveAllUp","POS","LENGTH","LAST","hex","result","exec","parseInt","hexToRgb","evt","XR","XL","YT","YB","rangX","rangY","offsetY","selectPos","DX","DY","A","B","C","D","el","a","createElement","download","click","downlaod_img","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"iQAQMA,EAAQ,CAAC,UAAW,QAAS,SAC7BC,EAAQ,CAAC,MAAO,OAAQ,MAAO,OAE/BC,EACE,UAUR,IAAMC,EAAW,SAACC,GAChB,OAAOC,SAASC,KAAKC,MAAMC,OAApB,UAAgCJ,EAAhC,YAaHK,EAAS,SAAC,GAAgC,IAA9BL,EAA6B,EAA7BA,IAAKM,EAAwB,EAAxBA,OAAQC,EAAgB,EAAhBA,UAC7B,OACE,qBACEC,UAAU,UACVL,MAAO,CAAEM,OAAQ,IACjBC,QAAS,WACPJ,EAAON,GACPO,GAAU,IALd,SAOGP,KAKDW,EAAS,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,KAAMC,EAA0B,EAA1BA,MAAOC,EAAmB,EAAnBA,SAAUC,EAAS,EAATA,GACvC,EAA4BC,oBAAS,GAArC,mBAAOC,EAAP,KAAeV,EAAf,KAaA,OAZAW,qBAAU,WACR,IAAMC,EAAY,SAACC,GACjBC,QAAQC,IAAIF,EAAEG,OAAOf,UAAWO,GAC5BK,EAAEG,OAAOf,YAAc,WAAaO,GACtCR,GAAU,IAId,OADAN,SAASuB,iBAAiB,QAASL,GAC5B,WACLlB,SAASwB,oBAAoB,QAASN,MAEvC,CAACJ,IAEF,sBACEP,UAAS,kBAAaO,GACtBZ,MAAO,CAAEuB,YAAa,EAAGC,WAAY,GAFvC,UAGE,sBACEnB,UAAS,kBAAaO,GAEtBL,QAAS,kBAAMH,GAAU,SAAAqB,GAAI,OAAKA,MAClCzB,MAAO,CAAE0B,WAAY,QAASC,QAAS,OAAQC,eAAgB,gBAAiBC,WAAY,SAAUC,YAAa,EAAGC,aAAc,EAAGC,MAAO,IAAK1B,OAAQ,IAJ7J,UAIoKI,EAAM,cAAC,IAAD,CAAmBuB,MAAM,QAAQC,KAAM,QAChNpB,GACC,qBACET,UAAS,kBAAaO,GAEtBZ,MAAO,CAAEmC,SAAU,WAAYC,UAAW,oCAAqCC,WAAY,EAAGN,aAAc,EAAGD,YAAa,EAAGE,MAAO,IAAKN,WAAY,QAASC,QAAS,OAAQE,WAAY,aAAcS,cAAe,UAH5N,SAIG7B,EAAK8B,KAAI,SAACC,EAAGC,GAAJ,OAAU,cAAC,EAAD,CAAQtC,OAAQQ,EAAUP,UAAWA,EAAWP,IAAK2C,EAAWE,MAAOD,GAAVA,YAQrFE,EAAS,SAAC,GAAuM,IAArMC,EAAoM,EAApMA,OAAQC,EAA4L,EAA5LA,KAAMC,EAAsL,EAAtLA,aAAcC,EAAwK,EAAxKA,UAAWC,EAA6J,EAA7JA,aAAcC,EAA+I,EAA/IA,QAASC,EAAsI,EAAtIA,KAAMC,EAAgI,EAAhIA,MAAOC,EAAyH,EAAzHA,WAAYC,EAA6G,EAA7GA,cAAeC,EAA8F,EAA9FA,SAAUC,EAAoF,EAApFA,UAAWC,EAAyE,EAAzEA,SAAUC,EAA+D,EAA/DA,SAAUxB,EAAqD,EAArDA,MAAOyB,EAA8C,EAA9CA,IAAKC,EAAyC,EAAzCA,QAASC,EAAgC,EAAhCA,WAAYC,EAAoB,EAApBA,QAAS3B,EAAW,EAAXA,KAUzM,OACE,sBAAK7B,UAAU,oBAAoByD,IAAKlB,EAAxC,UACE,sBAAKvC,UAAU,YAAf,UACE,sBAAKA,UAAmB,QAAR6C,EAAiB,cAAgB,WAAjD,eAA+D,cAAC,IAAD,CAAWjB,MAAe,QAARiB,EAAiB,UAAY,OAAQhB,KAAM,GAAI7B,UAAU,OAAOE,QAAS,WACxJsC,IACAI,EAAQ,WAFV,UAKA,sBAAK5C,UAAmB,QAAR6C,EAAiB,cAAgB,WAAjD,cAA8D,cAAC,IAAD,CAAehB,KAAM,GAAID,MAAe,QAARiB,GAAkBvD,EAAoBU,UAAU,OAAOE,QAAS,kBAAM0C,EAAQ,cAC5K,sBAAK5C,UAAmB,IAAR6C,EAAa,cAAgB,WAA7C,cAA0D,cAAC,IAAD,CAAkBhB,KAAM,GAAID,MAAe,IAARiB,GAAcvD,EAAoBU,UAAU,OAAOE,QAAS,kBAAMgD,UAC/J,sBAAKlD,UAAmB,IAAR6C,EAAa,cAAgB,WAA7C,cAA0D,cAAC,IAAD,CAAUhB,KAAM,GAAID,MAAe,IAARiB,GAAcvD,EAAoBU,UAAU,OAAOE,QAAS,SAACU,GAAD,OAlBvI,SAACyC,GACfT,EAAQ,SACRO,EAASC,EAASM,QAAQrD,OAC1BgD,EAAIK,QAAQC,yBAA2B,kBACvCR,EAAS,QAcmJS,CAAQP,SAChK,sBAAKrD,UAAmB,WAAR6C,EAAoB,cAAgB,WAApD,cAAiE,cAAC,IAAD,CAAUhB,KAAM,GAAID,MAAe,WAARiB,GAAqBvD,EAAoBU,UAAU,OAAOE,QAAS,kBAAM0C,EAAQ,iBAC7K,sBAAK5C,UAAmB,QAAR6C,EAAiB,cAAgB,WAAjD,cAA8D,cAAC,IAAD,CAAkBhB,KAAM,GAAID,MAAe,QAARiB,GAAkBvD,EAAoBU,UAAU,OAAOE,QAAS,kBAAM0C,EAAQ,cAC/K,sBAAK5C,UAAmB,UAAR6C,EAAmB,cAAgB,WAAnD,cAAgE,cAAC,IAAD,CAAchB,KAAM,GAAID,MAAe,UAARiB,GAAoBvD,EAAoBU,UAAU,OAAOE,QAAS,kBAAM0C,EAAQ,gBAC/K,sBAAK5C,UAAmB,UAAR6C,EAAmB,cAAgB,WAAnD,cAAgE,cAAC,IAAD,CAAShB,KAAM,GAAID,MAAe,UAARiB,GAAoBvD,EAAoBU,UAAU,cAAcE,QAAS,kBAAM0C,EAAQ,gBACjL,sBAAK5C,UAAmB,SAAR6C,EAAkB,cAAgB,WAAlD,cAA+D,cAAC,IAAD,CAAS3C,QAAS,kBAAM0C,EAAQ,UAAUhB,MAAe,SAARiB,GAAmBvD,EAAoBuC,KAAM,GAAI7B,UAAU,eAE7K,sBAAKA,UAAU,YAAf,UACE,cAAC,EAAD,CAAQO,GAAI,EAAGH,KAAMhB,EAAOkB,SAAU0C,EAAe3C,MAAO0C,IAC5D,cAAC,EAAD,CAAQxC,GAAI,EAAGH,KAAMf,EAAOiB,SAAU2C,EAAU5C,MAAOyC,IAEvD,uBAAOD,KAAK,QACV7C,UAAU,eACVyD,IAAKL,EACL/C,MAAOiD,EAASO,gBAAiB,SAACjD,GAAD,OAAO2C,GAAW,SAAAnC,GAAI,OAAIR,EAAEG,OAAOV,YACtE,oBAAIL,UAAU,OAAd,mBAGQ,SAAT6C,EACC,sBAAK7C,UAAU,WAAf,UACE,sBAAKA,UAAU,WAAf,UAEE,uBAAO8D,QAAQ,cAAf,2BACA,uBACEvD,GAAG,SAASsC,KAAK,QAAQkB,IAAI,IAAIC,IAAI,KACrChE,UAAU,SACViE,aAAcpC,EACdqC,SAAU,SAACtD,GAAD,OAAO4C,EAAQ5C,EAAEG,OAAOV,QAClC8D,UAAW,SAACvD,GAAD,OAAO4C,EAAQ5C,EAAEG,OAAOV,aAI7B,UAATwC,GACC,sBAAK7C,UAAU,WAAf,UACE,qCACE,uBAAO8D,QAAQ,eAAf,sBACA,uBACEjB,KAAK,QACL7C,UAAU,eACVyD,IAAKL,EACL/C,MAAOuB,EAAOiC,gBAAiB,SAACjD,GAAD,OAAOuC,EAASvC,EAAEG,OAAOV,QACxD+D,YAAY,YAGN,UAATvB,GAA4B,WAATA,EAClB,qCACE,uBAAOiB,QAAQ,aAAf,oBACA,uBACEjB,KAAK,QACL7C,UAAU,eACVyD,IAAKhB,EACLpC,MAAOqC,EACPmB,gBAAiB,SAACjD,GAAD,OAAO+B,EAAa/B,EAAEG,OAAOV,aAErC,WAGZ,SAKXgE,EAAW,SAAC,GAAsB,IAArBC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,SACvB1D,QAAQC,IAAIwD,GACZ,MAAwB9D,mBAAS8D,EAAKzC,MAAtC,mBAAOA,EAAP,KAAa2B,EAAb,KACA,EAAkChD,mBAAS8D,EAAKE,MAAhD,mBAAO9B,EAAP,KAAkBC,EAAlB,KACA,EAA0BnC,mBAAS8D,EAAK1C,OAAxC,mBAAOA,EAAP,KAAcuB,EAAd,KACMC,EAAWqB,mBACXhC,EAAegC,mBAWrB,OATF/D,qBAAU,WACR6D,GAAS,SAAAnD,GAIR,OAHCA,EAAKA,EAAKsD,OAAQ,GAAG9C,MAAQA,EAC7BR,EAAKA,EAAKsD,OAAQ,GAAGF,KAAO9B,EAC5BtB,EAAKA,EAAKsD,OAAQ,GAAG7C,KAAOA,EACtB,YAAIT,QAEX,CAACQ,EAAOc,EAAUb,IAGjB,sBAAK7B,UAAU,WAAf,UACE,sBAAKA,UAAU,WAAf,UAEE,uBAAO8D,QAAQ,cAAf,2BACA,uBACEvD,GAAG,SAASsC,KAAK,QAAQkB,IAAI,IAAIC,IAAI,KACrChE,UAAU,SACViE,aAAcpC,EACdqC,SAAU,SAACtD,GAAD,OAAO4C,EAAQ5C,EAAEG,OAAOV,QAClC8D,UAAW,SAACvD,GAAD,OAAO4C,EAAQ5C,EAAEG,OAAOV,aAIvC,sBAAKL,UAAU,WAAf,UACE,qCACE,uBAAO8D,QAAQ,eAAf,sBACA,uBACEjB,KAAK,QACL7C,UAAU,eACVyD,IAAKL,EACL/C,MAAOuB,EAAOiC,gBAAiB,SAACjD,GAAD,OAAOuC,EAASvC,EAAEG,OAAOV,QACxD+D,YAAY,YAGhB,qCACE,uBAAON,QAAQ,aAAf,oBACA,uBACEjB,KAAK,QACL7C,UAAU,eACVyD,IAAKhB,EACLpC,MAAOqC,EACPmB,gBAAiB,SAACjD,GAAD,OAAO+B,EAAa/B,EAAEG,OAAOV,oBAuxB3CsE,MAhxBf,WAAgB,IAAD,EACPvB,EAAWqB,mBACXG,EAAYH,mBACZxE,EAAS4E,OAAOC,YAChBnD,EAAQkD,OAAOE,WACrB,EAA0BvE,mBAAS,IAAnC,mBAAOwE,EAAP,KAAcT,EAAd,KACA,EAAwB/D,mBAAS,SAAjC,mBAAOqC,EAAP,KAAaD,EAAb,KACA,EAA0BpC,mBAAS,WAAnC,mBAAOoB,EAAP,KAAcuB,EAAd,KACA,EAAkC3C,mBAAS,WAA3C,mBAAOkC,EAAP,KAAkBC,EAAlB,KACMF,EAAegC,mBACrB,EAAwBjE,mBAAS,IAAjC,mBAAOqB,EAAP,KAAa2B,EAAb,KACA,EAA8BhD,qBAA9B,mBAAOyE,EAAP,KAAgBC,EAAhB,KACA,EAA8B1E,mBAAS,WAAvC,mBAAO8C,EAAP,KAAgBC,EAAhB,KACA,EAA8B/C,mBAAS,IAAvC,mBAAO2E,EAAP,KAAgBC,EAAhB,KACA,EAAgC5E,mBAAS,MAAzC,mBAAO6E,EAAP,KAAiBC,EAAjB,KAEA,EAAwB9E,mBAAS,CAC/B+E,EAAG5D,EAAQ,EACX6D,EAAGvF,EAAS,IAFd,mBAAOwF,EAAP,KAAaC,GAAb,KAIMrC,GAAMoB,mBACNlC,GAASkC,mBACf,GAA0BjE,mBAAS,QAAnC,qBAAOsC,GAAP,MAAcG,GAAd,MACA,GAAoCzC,mBAAS,SAA7C,qBAAOuC,GAAP,MAAmBC,GAAnB,MACA,GAA6BxC,mBAAS,IAAtC,qBAAOmF,GAAP,MAAgBC,GAAhB,MACMC,GAAUpB,mBAChBqB,2BAAgB,WAEd,IAAMC,EAASnB,EAAUlB,QACzBqC,EAAOpE,MAAQ,IAAKoE,EAAO9F,OAAS,IACpCoD,GAAIK,QAAUqC,EAAOC,WAAW,MAChCC,OAEC,IAGH,IAAMC,GAAW,SAACC,EAAS7B,GACzB6B,EAAQC,YAAc9B,EAAK1C,MAC3BuE,EAAQE,UAAY/B,EAAKE,KACzB2B,EAAQG,UAAYhC,EAAKzC,KACzBwB,GAAIK,QAAQ6C,YACZJ,EAAQK,SAASlC,EAAKmC,IAAI,GAAGC,GAAIpC,EAAKmC,IAAI,GAAGE,GAAIrC,EAAKmC,IAAI,GAAGG,GAAKtC,EAAKmC,IAAI,GAAGC,GAAIpC,EAAKmC,IAAI,GAAGI,GAAKvC,EAAKmC,IAAI,GAAGE,IAC/GR,EAAQW,WAAWxC,EAAKmC,IAAI,GAAGC,GAAIpC,EAAKmC,IAAI,GAAGE,GAAIrC,EAAKmC,IAAI,GAAGG,GAAKtC,EAAKmC,IAAI,GAAGC,GAAIpC,EAAKmC,IAAI,GAAGI,GAAKvC,EAAKmC,IAAI,GAAGE,IACjHR,EAAQY,SACRZ,EAAQa,aAkgBV,SAASf,KAEP5C,GAAIK,QAAQ2C,UAAY/C,EACxBD,GAAIK,QAAQuD,QAAU,QACtB5D,GAAIK,QAAQwD,SAAW,QACvB7D,GAAIK,QAAQ8C,SAAS,EAAG,EAAGnD,GAAIK,QAAQqC,OAAOpE,MAAO0B,GAAIK,QAAQqC,OAAO9F,QAEpE+E,EAAMN,OAAS,GACjBM,EAAMmC,SAAQ,SAAAC,GAnfC,IAACjB,EAAS7B,EAqfT,QAAV8C,EAAEvE,KACJqD,GAAS7C,GAAIK,QAAS0D,GACH,UAAVA,EAAEvE,KA3gBA,SAACsD,EAAS7B,GAC3B6B,EAAQC,YAAc9B,EAAK1C,MAC3B,IAAMyF,EAAK/C,EAAKmC,IAAI,GAAGC,GACjBY,EAAKhD,EAAKmC,IAAI,GAAGG,GACjBW,EAAKjD,EAAKmC,IAAI,GAAGE,GAEjBa,EAAaF,EAAKD,EAClBI,EAFKnD,EAAKmC,IAAI,GAAGI,GAECU,EACxBpB,EAAQE,UAAY/B,EAAKE,KACzB2B,EAAQG,UAAYhC,EAAKzC,KACzBwB,GAAIK,QAAQ6C,YACZJ,EAAQuB,QAAQL,EAAOG,EAAc,EACnCD,EAAOE,EAAc,EACrBD,EAAa,GAAK,EAAKA,EAAeA,EACtCC,EAAa,GAAK,EAAKA,EAAeA,EAAa,EAAG,EAAG,EAAIE,KAAKC,IACpEzB,EAAQY,SACRZ,EAAQ3B,OACR2B,EAAQa,YA2fFa,CAAWxE,GAAIK,QAAS0D,GACL,UAAVA,EAAEvE,MAzfCsD,EA0fD9C,GAAIK,QA1fMY,EA0fG8C,EAzf9B/D,GAAIK,QAAQ6C,YACZJ,EAAQC,YAAc9B,EAAK1C,MAC3BuE,EAAQG,UAAYhC,EAAKzC,KACzBsE,EAAQ2B,OAAOxD,EAAKmC,IAAI,GAAGC,GAAIpC,EAAKmC,IAAI,GAAGE,IAC3CR,EAAQ4B,OAAOzD,EAAKmC,IAAI,GAAGG,GAAItC,EAAKmC,IAAI,GAAGI,IAC3CV,EAAQY,SACRZ,EAAQa,aAofiB,SAAVI,EAAEvE,KAjfF,SAACsD,EAAS7B,GACzBjB,GAAIK,QAAQ6C,YACZ,IAAK,IAAInE,EAAI,EAAGA,EAAIkC,EAAKmC,IAAI/B,OAAS,EAAGtC,SACf4F,IAApB1D,EAAKmC,IAAIrE,EAAI,KACf+D,EAAQC,YAAc9B,EAAK1C,MAC3BuE,EAAQG,UAAYhC,EAAKzC,KACzBsE,EAAQ2B,OAAOxD,EAAKmC,IAAIrE,GAAGmD,EAAGjB,EAAKmC,IAAIrE,GAAGoD,GAC1CW,EAAQ4B,OAAOzD,EAAKmC,IAAIrE,EAAI,GAAGmD,EAAGjB,EAAKmC,IAAIrE,EAAI,GAAGoD,GAClDW,EAAQY,UAGZZ,EAAQa,YAueFiB,CAAS5E,GAAIK,QAAS0D,GACH,WAAVA,EAAEvE,MApeK,SAACsD,EAAS7B,GAChC6B,EAAQI,YACRJ,EAAQ2B,OAAOxD,EAAKmC,IAAI,GAAGlB,EAAGjB,EAAKmC,IAAI,GAAGjB,GAC1C,IAAK,IAAIpD,EAAI,EAAGA,EAAIkC,EAAKmC,IAAI/B,OAAS,EAAGtC,SACf4F,IAApB1D,EAAKmC,IAAIrE,EAAI,KACf+D,EAAQC,YAAc9B,EAAK1C,MAC3BuE,EAAQE,UAAY/B,EAAKE,KACzB2B,EAAQG,UAAYhC,EAAKzC,KACzBsE,EAAQ4B,OAAOzD,EAAKmC,IAAIrE,GAAGmD,EAAGjB,EAAKmC,IAAIrE,GAAGoD,GAC1CW,EAAQ4B,OAAOzD,EAAKmC,IAAIrE,EAAI,GAAGmD,EAAGjB,EAAKmC,IAAIrE,EAAI,GAAGoD,GAClDW,EAAQ3B,OACR2B,EAAQY,UAGZZ,EAAQa,YAwdFkB,CAAgB7E,GAAIK,QAAS0D,MAInCvG,QAAQC,IAAI6E,IACRA,GAAQjB,OAAS,IACnB7D,QAAQC,IAAI,WAAY6E,IACxBO,GAAS7C,GAAIK,QAASiC,GAAQ,KAoJlC,OA9IAjF,qBAAU,WACK,SAATmC,GACF+C,GAAU,MAEX,CAAC/C,IACJnC,qBAAU,WACRuF,KACA,IAAIkC,EAAQ,IAAIC,MACZC,EAAMhF,GAAIK,QAAQqC,OAAOuC,UAAU,cACvCH,EAAMI,IAAMF,EACA5I,SAAS+I,eAAe,WAChCC,KAAOJ,IACV,CAAC/E,EAAS0B,EAAOW,KAEpBjF,qBAAU,WACR2C,GAAIK,QAAQuD,QAAU,QACtB5D,GAAIK,QAAQwD,SAAW,QACvB7D,GAAIK,QAAQ0C,YAAcxE,EAC1ByB,GAAIK,QAAQ2C,UAAY3D,EACxBW,GAAIK,QAAQ4C,UAAYzE,IACvB,CAACD,EAAOC,EAAMa,IAGjBhC,qBAAU,WAER,GADAG,QAAQC,IAAIqE,GACRA,EAAQT,OAAS,EACnB,GAAmB,KAAfS,EAAQ,IAA4B,KAAfA,EAAQ,GACM,YAAjCH,EAAMA,EAAMN,OAAS,GAAG7B,MAC1B0B,GAAS,SAAAnD,GAEP,OADAA,EAAKA,EAAKsD,OAAS,GAAG+B,IAAIiC,KAAK,CAAEnD,EAAGnE,EAAKA,EAAKsD,OAAS,GAAG+B,IAAI,GAAGlB,EAAGC,EAAGpE,EAAKA,EAAKsD,OAAS,GAAG+B,IAAI,GAAGjB,IAC7F,YAAIpE,MAGfgE,EAAW,SACN,GAAmB,KAAfD,EAAQ,IAA4B,KAAfA,EAAQ,GAAW,CACvC,YAAOH,GACZ2D,MACLpE,SACwB,KAAfY,EAAQ,IAAgC,IAAnBA,EAAQT,QACtCM,EAAMmC,SAAQ,SAACC,EAAGhF,GAEhB,GADAvB,QAAQC,IAAI,IAAKsB,EAAGgF,IACH,IAAbA,EAAEwB,OAAiB,CACrB/H,QAAQC,IAAI,WAAYsB,GACxB,IAAMyG,EAAI,YAAO7D,GACjB6D,EAAKF,MAELpE,EAASsE,GACTjD,GAAU,UAMjB,CAACT,EAASH,IACbtE,qBAAU,WACR,IAAMoI,EAAU,SAAClI,GAEfwE,GAAW,SAAAhE,GAGT,OAAc,GAFAA,EAAK2H,WAAU,SAAA3B,GAAC,OAAIA,IAAMxG,EAAEuE,WAGlC,GAAN,mBAAW/D,GAAX,CAAiBR,EAAEuE,UAEZ,YAAI/D,OAIX4H,EAAQ,SAACpI,GACbwE,EAAW,KAKb,OAHA3F,SAASuB,iBAAiB,UAAW8H,GACrCrJ,SAASuB,iBAAiB,QAASgI,GAE5B,WACLvJ,SAASwB,oBAAoB,UAAW6H,GACxCrJ,SAASwB,oBAAoB,QAAS+H,OAoExC,sBAAKhJ,UAAU,MAAf,UACG2F,GAAQjB,OAAS,GAAK,cAAC,EAAD,CAAUJ,KAAMU,EAAMA,EAAMN,OAAQ,GAAIH,SAAUA,IACzE,cAAC,EAAD,CACEhC,OAAQA,GACRG,UAAWA,EACXD,aAAcA,EACdE,aAAcA,EACdO,UA5DY,WAChBG,GAAIK,QAAQR,UAAU,EAAG,EAAGG,GAAIK,QAAQqC,OAAOpE,MAAO0B,GAAIK,QAAQqC,OAAO9F,QACzEsE,EAAS,KA2DL3B,QAASA,EACTC,KAAMA,EACNM,SAAUA,EACVC,SAAUA,EACVC,IAAKA,GACLzB,MAAOA,EACP0B,QAASA,EACTC,WAAYA,EACZC,QAASA,EACT3B,KAAMA,EACNoB,SAAUA,GACVD,cAAeA,GACfF,MAAOA,GACPC,WAAYA,GACZP,KAtEO,WACX,IAAMqG,EAAI,YAAO7D,GACjB6D,EAAKF,MACLpE,EAASsE,MAqEP,kDACA,2BACEpF,IAAKmB,EACLjD,MAAO,IACP1B,OAAQ,KAHV,oBAIO2E,GAJP,mCAKqB,SAAChE,GAAD,OAAOwE,EAAWxE,MALvC,6BA5nBiB,SAACA,GACpBA,EAAEqI,iBACFrI,EAAEsI,kBAEF,IAAIC,EAAQvI,EAAEwI,SAAYxI,EAAEyI,MAAQzE,EAAUlB,QAAQ4F,WAClDC,EAAQ3I,EAAE4I,SAAY5I,EAAE6I,MAAQ7E,EAAUlB,QAAQgG,UAWtD,GAVA7D,GAAQnC,QAAU,CAAEiG,OAAQR,EAAOS,OAAQL,EAAOM,KAAMV,EAAOW,KAAMP,GACrE7D,IAAQ,SAAAtE,GAGN,OAFAA,EAAKmE,EAAI4D,EACT/H,EAAKoE,EAAI+D,EACFnI,KAKT8D,GAAW,GACE,UAATrC,EACF0B,GAAS,SAAAnD,GAAI,4BAAQA,GAAR,CACb,CACEb,GAAIyE,EAAMN,OACV9C,MAAOA,EACPiB,KAAMA,EACNhB,KAAMA,EACN4E,IAAK,CAAC,CAAElB,EAAG4D,EAAO3D,EAAG+D,IACrBX,QAAQ,aAEL,GAAa,SAAT/F,EACThC,QAAQC,IAAI,IAAKqI,EAAOI,GAExBvE,EAAMmC,SAAQ,SAACC,EAAGhF,GAChBvB,QAAQC,IAAIsG,GACR+B,GAAS/B,EAAEX,IAAI,GAAGC,IAAMU,EAAEX,IAAI,GAAGlB,IACnC4D,GAAS/B,EAAEX,IAAI,GAAGG,IAAMQ,EAAEX,IAAI,GAAGlB,IACjCgE,GAASnC,EAAEX,IAAI,GAAGE,IAAMS,EAAEX,IAAI,GAAGjB,IACjC+D,GAASnC,EAAEX,IAAI,GAAGI,IAAMO,EAAEX,IAAI,GAAGjB,KAEjC3E,QAAQC,IAAI,uBACZ8E,GAAU,CAAC,CACTrF,GAAI,SACJqB,MAAOtC,EACPuD,KAAMA,EACNhB,KAAM,EACN2C,KAAM,gBACNiC,IAAK,CAAC,CAAEC,GAAIU,EAAEX,IAAI,GAAGC,GAAMU,EAAEvF,KAAO,EAAI8E,GAAIS,EAAEX,IAAI,GAAGE,GAAMS,EAAEvF,KAAO,EAAI+E,GAAIQ,EAAEX,IAAI,GAAGG,GAAMQ,EAAEvF,KAAO,EAAIgF,GAAIO,EAAEX,IAAI,GAAGI,GAAMO,EAAEvF,KAAO,IACpI+G,QAAQ,KAGVrE,GAAS,SAAAnD,GAUP,OATAA,EAAK+F,SAAQ,SAACC,EAAG2C,GAEb3C,EAAEwB,OADAxG,GAAK2H,KAOX3I,EA1XM,SAAC4I,EAAO5H,GACxB,IAAMyG,EAAOmB,EAAM5H,GACb6H,EAAQD,EAAMC,MAAM,EAAG7H,GACvB8H,EAAMF,EAAMC,MAAM7H,EAAG4H,EAAMtF,QAIjC,OAHAwF,EAAIC,QAEJtJ,QAAQC,IAAI+H,EAAMoB,EAAOC,GACnB,GAAN,mBAAWD,GAAX,YAAqBC,GAArB,CAA0BrB,IAmXTuB,CAAUhJ,EAAMgB,GAChB,YAAIhB,MAGbkE,EAAYlD,YAIX,GAAa,WAATS,QAEJ,GAAa,SAATA,EACT0B,GAAS,SAAAnD,GAAI,4BAAQA,GAAR,CACb,CACEb,GAAIyE,EAAMN,OACV9C,MAAOA,EACPiB,KAAMA,EACNhB,KAAMA,EACN2C,KAAM9B,EACN+D,IAAK,CAAC,CAAEC,GAAIyC,EAAOxC,GAAI4C,EAAO3C,GAAIuC,EAAOtC,GAAI0C,IAC7CX,QAAQ,aAIL,GAAa,WAAT/F,EACT0B,GAAS,SAACnD,GAAD,4BAAcA,GAAd,CACT,CACEb,GAAIyE,EAAMN,OACV9C,MAAOA,EACP4C,KAAM9B,EACNG,KAAMA,EACNhB,KAAMA,EACN4E,IAAK,CAAC,CAAEC,GAAIyC,EAAOxC,GAAI4C,EAAO3C,GAAIuC,EAAOtC,GAAI0C,eAE1C,GAAa,WAAT1G,EACT0B,GAAS,SAAAnD,GAAI,4BAAQA,GAAR,CACb,CACEb,GAAIyE,EAAMN,OACV9C,MAAOA,EACPiB,KAAMA,EACNhB,KAAMA,EACN4E,IAAK,CAAC,CAAEC,GAAIyC,EAAOxC,GAAI4C,EAAO3C,GAAIuC,EAAOtC,GAAI0C,IAC7CX,QAAQ,aAGL,GAAa,YAAT/F,EAGT,GAAImC,EAAMN,OAAS,EAGjB,GAAqC,YAAjCM,EAAMA,EAAMN,OAAS,GAAG7B,KAG1B0B,GAAS,SAAAnD,GAAI,4BAAQA,GAAR,CACb,CACEb,GAAIyE,EAAMN,OACV9C,MAAOA,EACP4C,KAAM9B,EACNG,KAAMA,EACNhB,KAAMA,EAEN4E,IAAK,CAAC,CAAElB,EAAG4D,EAAO3D,EAAG+D,IACrBX,QAAQ,YAIL,CAEL,IAAMvG,EAAQ2C,EAAMN,OAAS,EACvB2F,EAAMrF,EAAM3C,GAAOoE,IACnB6D,EAASD,EAAI3F,OACb6F,EAAOD,EAAS,GA5chC,SAAkBE,GAChB,IAAIC,EAAS,4CAA4CC,KAAKF,GACvDC,IACFE,SAASF,EAAO,GAAI,IACpBE,SAASF,EAAO,GAAI,IACpBE,SAASF,EAAO,GAAI,MA2cLG,CAASlI,GAEjB2H,EAAIE,GAAMhF,IAAM8E,EAAI,GAAG9E,GACzB8E,EAAIE,GAAM/E,IAAM6E,EAAI,GAAG7E,GAAgB,IAAX8E,EAC5B/F,GAAS,SAAAnD,GAAI,4BAAQA,GAAR,CAAc,CACzBb,GAAIyE,EAAMN,OACV9C,MAAOA,EACP4C,KAAM9B,EACNG,KAAMA,EACNhB,KAAMA,EACN4E,IAAK,CAAC,CAAElB,EAAG4D,EAAO3D,EAAG+D,IACrBX,QAAQ,QAMVrE,GAAS,SAAAnD,GAGP,IAAMyH,EAAOzH,EAAKA,EAAKsD,OAAS,GAAG+B,IAInC,OAFArF,EAAKA,EAAKsD,OAAS,GAAG+B,IAAtB,sBAAgCoC,GAAhC,CAAsC,CAAEtD,EAAG4D,EAAO3D,EAAG+D,KAE9C,YAAInI,WAOjBmD,GAAS,SAAAnD,GAAI,MAAI,CACf,CACEb,GAAIyE,EAAMN,OACV9C,MAAOA,EACP4C,KAAM9B,EACNG,KAAMA,EACNhB,KAAMA,EACN4E,IAAK,CAAC,CAAElB,EAAG4D,EAAO3D,EAAG+D,IACrBX,QAAQ,UAkdd,2BAhoBc,SAAChI,GACLA,EAAEwI,UAAYxI,EAAEyI,MAAQzE,EAAUlB,QAAQ4F,YAC1C1I,EAAE4I,UAAY5I,EAAE6I,MAAQ7E,EAAUlB,QAAQgG,cA8nBpD,6BAxcW,SAACmB,GACd,IAOIC,EAAIC,EAAIC,EAAIC,EAAIC,EAAOC,EAPrBhC,EAAQ0B,EAAIzB,SAAYyB,EAAIxB,MAAQzE,EAAUlB,QAAQ4F,WACtDC,EAAQsB,EAAIO,SAAYP,EAAIpB,MAAQ7E,EAAUlB,QAAQgG,UAO5D,GANAhE,IAAQ,SAAAtE,GAGN,OAFAA,EAAKmE,EAAI4D,EACT/H,EAAKoE,EAAI+D,EACFnI,KAGLuE,GAAQjB,OAAS,EAAG,CACtB,IAAM2G,EAAY1F,GAAQ,GAAGc,IAAI,GACjCqE,EAAMO,EAAUzE,GAAK,GAAKuC,GAASkC,EAAUzE,GAAK,GAAKuC,EACvD6B,EAAMK,EAAU1E,GAAK,GAAK4C,GAAS8B,EAAU1E,GAAK,GAAK4C,EACvDwB,EAAMM,EAAU3E,GAAK,GAAKyC,GAASkC,EAAU3E,GAAK,GAAKyC,EACvD8B,EAAMI,EAAUxE,GAAK,GAAK0C,GAAS8B,EAAUxE,GAAK,GAAK0C,EACvD2B,EAASG,EAAU3E,GAAKyC,GAASkC,EAAUzE,GAAKuC,EAChDgC,EAASE,EAAUxE,GAAK0C,GAAS8B,EAAU1E,GAAK4C,EAC5CuB,GAAME,EACRzL,EAAS,MACAuL,GAAMG,GAENF,GAAMC,EADfzL,EAAS,MAGAwL,GAAME,EACf1L,EAAS,MACAuL,GAAMK,GAENJ,GAAMI,EADf5L,EAAS,KAGA2L,GAASD,GAETC,GAASF,EADlBzL,EAAS,KAITE,SAASC,KAAKC,MAAMC,OAAS,OAGjC,GAAKqF,EAAL,CACAY,GAAQnC,QAAQiG,OAASlE,EAAKF,EAC9BM,GAAQnC,QAAQkG,OAASnE,EAAKD,EAC9BK,GAAQnC,QAAQmG,KAAOV,EACvBtD,GAAQnC,QAAQoG,KAAOP,EAEvB,IAAM+B,EAAKzF,GAAQnC,QAAQmG,KAAOhE,GAAQnC,QAAQiG,OAC5C4B,EAAK1F,GAAQnC,QAAQoG,KAAOjE,GAAQnC,QAAQkG,OAGlD,GAAIjE,GAAQjB,OAAS,GACnB,GAAa,SAAT7B,EAAiB,CAInB,MAA2BmC,EAAMK,GAAUoB,IAAI,GAAvCC,EAAR,EAAQA,GAAIC,EAAZ,EAAYA,GAAIC,EAAhB,EAAgBA,GAAIC,EAApB,EAAoBA,GACRhB,GAAQnC,QAAQiG,OAChB9D,GAAQnC,QAAQkG,OACxBkB,GAAME,GACRnK,QAAQC,IAAI,mBACZyD,GAAS,SAAAnD,GAGP,OAFAA,EAAKA,EAAKsD,OAAS,GAAG+B,IAAI,GAAGG,IAAM0E,EAAK,EACxClK,EAAKA,EAAKsD,OAAS,GAAG+B,IAAI,GAAGE,IAAM4E,EAAK,EACjC,YAAInK,MAEbwE,IAAU,SAAAxE,GAIR,OAHAA,EAAK,GAAGqF,IAAI,GAAGG,IAAM0E,EAAK,EAC1BlK,EAAK,GAAGqF,IAAI,GAAGE,IAAM4E,EAAK,EAEnB,YAAInK,OAEJ0J,GAAMG,GACfpK,QAAQC,IAAI,sBACZyD,GAAS,SAAAnD,GAGP,OAFAA,EAAKA,EAAKsD,OAAS,GAAG+B,IAAI,GAAGG,IAAM0E,EAAK,EACxClK,EAAKA,EAAKsD,OAAS,GAAG+B,IAAI,GAAGI,IAAM0E,EAAK,EACjC,YAAInK,MAEbwE,IAAU,SAAAxE,GAIR,OAHAA,EAAK,GAAGqF,IAAI,GAAGG,IAAM0E,EAAK,EAC1BlK,EAAK,GAAGqF,IAAI,GAAGI,IAAM0E,EAAK,EAEnB,YAAInK,OAEJ2J,GAAMC,GACfnK,QAAQC,IAAI,kBACZyD,GAAS,SAAAnD,GAGP,OAFAA,EAAKA,EAAKsD,OAAS,GAAG+B,IAAI,GAAGC,IAAM4E,EAAK,EACxClK,EAAKA,EAAKsD,OAAS,GAAG+B,IAAI,GAAGE,IAAM4E,EAAK,EACjC,YAAInK,MAEbwE,IAAU,SAAAxE,GAIR,OAHAA,EAAK,GAAGqF,IAAI,GAAGC,IAAM4E,EAAK,EAC1BlK,EAAK,GAAGqF,IAAI,GAAGE,IAAM4E,EAAK,EAEnB,YAAInK,OAEJ2J,GAAME,GACfpK,QAAQC,IAAI,qBACZyD,GAAS,SAAAnD,GAGP,OAFAA,EAAKA,EAAKsD,OAAS,GAAG+B,IAAI,GAAGC,IAAM4E,EAAK,EACxClK,EAAKA,EAAKsD,OAAS,GAAG+B,IAAI,GAAGI,IAAM0E,EAAK,EACjC,YAAInK,MAEbwE,IAAU,SAAAxE,GAGR,OAFAA,EAAK,GAAGqF,IAAI,GAAGC,IAAM4E,EAAK,EAC1BlK,EAAK,GAAGqF,IAAI,GAAGI,IAAM0E,EAAK,EACnB,YAAInK,OAEJ0J,GAAMK,GACftK,QAAQC,IAAI,SACZD,QAAQC,IAAIqI,EAAOI,GACnBhF,GAAS,SAAAnD,GAEP,OADAA,EAAKA,EAAKsD,OAAS,GAAG+B,IAAI,GAAGG,IAAM0E,EAAK,EACjC,YAAIlK,MAEbwE,IAAU,SAAAxE,GAER,OADAA,EAAK,GAAGqF,IAAI,GAAGG,IAAM0E,EAAK,EACnB,YAAIlK,OAEJ2J,GAAMI,GACftK,QAAQC,IAAI,QACZD,QAAQC,IAAIqI,EAAOI,GACnBhF,GAAS,SAAAnD,GAEP,OADAA,EAAKA,EAAKsD,OAAS,GAAG+B,IAAI,GAAGC,IAAM4E,EAAK,EACjC,YAAIlK,MAEbwE,IAAU,SAAAxE,GAER,OADAA,EAAK,GAAGqF,IAAI,GAAGC,IAAM4E,EAAK,EACnB,YAAIlK,OAEJ8J,GAASD,GAClBpK,QAAQC,IAAI,UACZyD,GAAS,SAAAnD,GAEP,OADAA,EAAKA,EAAKsD,OAAS,GAAG+B,IAAI,GAAGI,IAAM0E,EAAK,EACjC,YAAInK,MAEbwE,IAAU,SAAAxE,GAER,OADAA,EAAK,GAAGqF,IAAI,GAAGI,IAAM0E,EAAK,EACnB,YAAInK,OAEJ8J,GAASF,GAClBnK,QAAQC,IAAI,OACZyD,GAAS,SAAAnD,GAEP,OADAA,EAAKA,EAAKsD,OAAS,GAAG+B,IAAI,GAAGE,IAAM4E,EAAK,EACjC,YAAInK,MAEbwE,IAAU,SAAAxE,GAER,OADAA,EAAK,GAAGqF,IAAI,GAAGE,IAAM4E,EAAK,EACnB,YAAInK,QAKbmD,GAAS,SAAAnD,GACP,MAAuCyE,GAAQnC,QAAvCiG,EAAR,EAAQA,OAAQE,EAAhB,EAAgBA,KAAMD,EAAtB,EAAsBA,OAAQE,EAA9B,EAA8BA,KACxB0B,EAAI7B,EAASjD,EACb+E,EAAI7B,EAASjD,EACb+E,EAAI9E,EAAK+C,EACTgC,EAAI9E,EAAK+C,EAEf,OADAxI,EAAKiE,GAAUoB,IAAM,CAAC,CAAEC,GAAImD,EAAO2B,EAAG7E,GAAImD,EAAO2B,EAAG7E,GAAIiD,EAAO6B,EAAG7E,GAAIiD,EAAO6B,IACtE,YAAIvK,MAGbwE,IAAU,SAAAxE,GAER,OADAA,EAAK,GAAGqF,IAAM,CAAC,CAAEC,GAAIA,EAAK4E,EAAMlK,EAAK,GAAGS,KAAO8E,GAAIA,GAAQvF,EAAK,GAAGS,KAAO+E,GAAIA,EAAK0E,EAAMlK,EAAK,GAAGS,KAAOgF,GAAIA,EAAK0E,EAAMnK,EAAK,GAAGS,OACxHT,WAIR,CAEL,IAEIqF,EAFA0D,EAAsB,IAAdhF,EAAQ,GACpB,EAAmBH,EAAMA,EAAMN,OAAS,GAAG+B,IAAI,GAAvCC,EAAR,EAAQA,GAAIC,EAAZ,EAAYA,GAGZ,GAAa,UAAT9D,EACF4D,EAAM,CAAElB,EAAGE,EAAKF,EAAGC,EAAGC,EAAKD,GAE3BjB,GAAS,SAACnD,GACR,IAAMyH,EAAOzH,EAAKA,EAAKsD,OAAS,GAAG+B,IAEnC,OADArF,EAAKA,EAAKsD,OAAS,GAAG+B,IAAtB,sBAAgCoC,GAAhC,CAAsC,CAAEtD,EAAGE,EAAKF,EAAGC,EAAGC,EAAKD,KACpD,YAAIpE,WAER,GAAa,YAATyB,QAQT,GAAa,SAATA,EAIF,OAA2BmC,EAAMK,GAAUoB,IAAI,GAAvCC,EAAR,EAAQA,GAAIC,EAAZ,EAAYA,GAAZ,EAAgBC,GAAhB,EAAoBC,GACRhB,GAAQnC,QAAQiG,OAChB9D,GAAQnC,QAAQkG,WA+Bf,WAAT/G,IAEgB,SAATA,GAES,WAATA,EADT4D,EAAM,CAAC,CAAEC,KAAIC,GAAIwD,EAAQzD,EAAKC,EAAIC,GAAInB,EAAKF,EAAGsB,GAAIsD,EAAQ1E,EAAKF,EAAIE,EAAKD,IAGtD,WAAT3C,IACT4D,EAAM,CAAC,CAAEC,KAAIC,KAAIC,GAAInB,EAAKF,EAAGsB,GAAIpB,EAAKD,MAIxCjB,GAAS,SAAAnD,GAEP,OADAA,EAAKA,EAAKsD,OAAS,GAAG+B,IAAMA,EACrB,YAAIrF,WAyNjB,2BAlNe,WACjB8D,GAAW,MAiNT,8BAUgB,SAACtE,OAVjB,IAaA,qBAAKjB,MAAO,CAAEgC,MAAO,OAAQL,QAAS,OAAQC,eAAgB,SAAUC,WAAY,UAApF,SAEE,qBAAKjB,GAAG,WAAWZ,MAAO,CAAEgC,MA59Bf,KA49BsCzB,QAAS,YAzG7C,SAAC0L,GAIR,IAAIxD,MAAhB,IACIC,EAAMhF,GAAIK,QAAQqC,OAAOuC,YACvBuD,EAAIpM,SAASqM,cAAc,KACjCD,EAAEpD,KAAOJ,EACTwD,EAAEE,SAAF,kBAAwBjJ,IACxB+I,EAAEG,QAiGIC,IADF,wBAIF,qBAAKjM,UAAU,eC99BNkM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpN,SAAS+I,eAAe,SAM1B0D,M","file":"static/js/main.9c614db0.chunk.js","sourcesContent":["import React, { useEffect, useState, useRef, useLayoutEffect } from 'react'\r\nimport { BsFillTrash2Fill, BsCircleFill, BsFillSquareFill, BsBrush } from 'react-icons/bs';\r\nimport { BiMinus, BiEraser, BiVector } from 'react-icons/bi';\r\nimport { IoIosUndo, IoMdArrowDropdown } from 'react-icons/io';\r\nimport { GiArrowCursor } from 'react-icons/gi';\r\n// import BG from './bg.jpg'\r\nimport './App.css';\r\n\r\nconst TYPES = [\"128x128\", \"64x64\", \"32x32\"]\r\nconst CODEC = ['png', 'jpeg', 'jpg', 'ico']\r\nconst CANVAS_WIDTH = 300;\r\nconst COLOR_PALLETE = {\r\n  blue: '#007bff'\r\n}\r\nfunction hexToRgb(hex) {\r\n  var result = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\r\n  return result ? {\r\n    r: parseInt(result[1], 16),\r\n    g: parseInt(result[2], 16),\r\n    b: parseInt(result[3], 16)\r\n  } : null;\r\n}\r\nconst arrowBox = (val) => {\r\n  return document.body.style.cursor = `${val}-resize`\r\n}\r\nconst moveAllUp = (array, i) => {\r\n  const temp = array[i]\r\n  const slice = array.slice(0, i)\r\n  const sec = array.slice(i, array.length)\r\n  sec.shift()\r\n  // array.shift()\r\n  console.log(temp, slice, sec)\r\n  return [...slice, ...sec, temp]\r\n\r\n}\r\n\r\nconst Option = ({ val, setVal, setToggle }) => {\r\n  return (\r\n    <div\r\n      className=\"options\"\r\n      style={{ height: 40 }}\r\n      onClick={() => {\r\n        setVal(val)\r\n        setToggle(false)\r\n      }}>\r\n      {val}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst Select = ({ data, value, setValue, id }) => {\r\n  const [toggle, setToggle] = useState(false)\r\n  useEffect(() => {\r\n    const cickEvent = (e) => {\r\n      console.log(e.target.className, id);\r\n      if (e.target.className !== 'options-' + id) {\r\n        setToggle(false)\r\n      }\r\n    }\r\n    document.addEventListener('click', cickEvent)\r\n    return () => {\r\n      document.removeEventListener('click', cickEvent)\r\n    }\r\n  }, [id])\r\n  return (\r\n    <div\r\n      className={`options-${id}`}\r\n      style={{ marginRight: 5, marginLeft: 5 }}>\r\n      <div\r\n        className={`options-${id}`}\r\n\r\n        onClick={() => setToggle(prev => !prev)}\r\n        style={{ background: 'white', display: 'flex', justifyContent: 'space-between', alignItems: 'center', paddingLeft: 5, paddingRight: 5, width: 100, height: 30 }}>{value}<IoMdArrowDropdown color='black' size={25} /></div>\r\n      {toggle &&\r\n        <div\r\n          className={`options-${id}`}\r\n\r\n          style={{ position: 'absolute', boxShadow: '0px 10px 12px 2px rgba(0,0,0,0.3)', paddingTop: 5, paddingRight: 5, paddingLeft: 5, width: 100, background: 'white', display: 'flex', alignItems: 'flex-start', flexDirection: 'column' }}>\r\n          {data.map((d, i) => <Option setVal={setValue} setToggle={setToggle} val={d} key={i} index={i} />)}\r\n        </div>\r\n      }\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nconst NavBar = ({ navRef, undo, fillColorRef, fillColor, setFillColor, setType, type, codec, resolution, setResolution, setCodec, clearRect, setColor, colorRef, color, ctx, bgColor, setBgColor, setSize, size }) => {\r\n\r\n  const onErase = (ctx) => {\r\n    setType('erase')\r\n    setColor(colorRef.current.value)\r\n    ctx.current.globalCompositeOperation = 'destination-out'\r\n    setColor('#FFF')\r\n  }\r\n\r\n\r\n  return (\r\n    <div className='nav-bar-container' ref={navRef}>\r\n      <div className='full-flex'>\r\n        <div className={type == 'undo' ? 'icon-choose' : 'box-icon'}>  <IoIosUndo color={type == 'undo' ? '#007bff' : 'grey'} size={20} className='icon' onClick={() => {\r\n          undo()\r\n          setType('undo')\r\n        }} />    </div>\r\n\r\n        <div className={type == 'move' ? 'icon-choose' : 'box-icon'}> <GiArrowCursor size={20} color={type == 'move' && COLOR_PALLETE.blue} className='icon' onClick={() => setType('move')} /></div>\r\n        <div className={type == '' ? 'icon-choose' : 'box-icon'}> <BsFillTrash2Fill size={20} color={type == '' && COLOR_PALLETE.blue} className='icon' onClick={() => clearRect()} /></div>\r\n        <div className={type == '' ? 'icon-choose' : 'box-icon'}> <BiEraser size={20} color={type == '' && COLOR_PALLETE.blue} className='icon' onClick={(e) => onErase(ctx)} /></div>\r\n        <div className={type == 'connect' ? 'icon-choose' : 'box-icon'}> <BiVector size={20} color={type == 'connect' && COLOR_PALLETE.blue} className='icon' onClick={() => setType('connect')} /></div>\r\n        <div className={type == 'rect' ? 'icon-choose' : 'box-icon'}> <BsFillSquareFill size={20} color={type == 'rect' && COLOR_PALLETE.blue} className='icon' onClick={() => setType('rect')} /></div>\r\n        <div className={type == 'circle' ? 'icon-choose' : 'box-icon'}> <BsCircleFill size={20} color={type == 'circle' && COLOR_PALLETE.blue} className='icon' onClick={() => setType('circle')} /></div>\r\n        <div className={type == 'stroke' ? 'icon-choose' : 'box-icon'}> <BiMinus size={35} color={type == 'stroke' && COLOR_PALLETE.blue} className='icon stroke' onClick={() => setType('stroke')} /></div>\r\n        <div className={type == 'brush' ? 'icon-choose' : 'box-icon'}> <BsBrush onClick={() => setType('brush')} color={type == 'brush' && COLOR_PALLETE.blue} size={20} className='icon' /></div>\r\n      </div>\r\n      <div className='full-flex'>\r\n        <Select id={0} data={TYPES} setValue={setResolution} value={resolution} />\r\n        <Select id={1} data={CODEC} setValue={setCodec} value={codec} />\r\n\r\n        <input type=\"color\"\r\n          className=\"color-picker\"\r\n          ref={colorRef}\r\n          value={bgColor} onChangeCapture={(e) => setBgColor(prev => e.target.value)} />\r\n        <h3 className='logo'>FV</h3>\r\n\r\n      </div>\r\n      {type !== 'move' ?\r\n        <div className='box-tool'>\r\n          <div className='tool-row'>\r\n\r\n            <label htmlFor='stroke-size'>STROKE SIZE: </label>\r\n            <input\r\n              id='slider' type=\"range\" min=\"0\" max=\"50\"\r\n              className=\"slider\"\r\n              defaultValue={size}\r\n              onChange={(e) => setSize(e.target.value)}\r\n              onMouseUp={(e) => setSize(e.target.value)}\r\n            />\r\n\r\n          </div>\r\n          {type !== 'erase' &&\r\n            <div className='tool-row'>\r\n              <>\r\n                <label htmlFor='stroke-color'>STROKE: </label>\r\n                <input\r\n                  type='color'\r\n                  className=\"color-picker\"\r\n                  ref={colorRef}\r\n                  value={color} onChangeCapture={(e) => setColor(e.target.value)}\r\n                  colorformat=\"rgba\"\r\n                />\r\n              </>\r\n              {type !== 'brush' ? type !== 'stroke' ?\r\n                <>\r\n                  <label htmlFor='fill-color'>FILL: </label>\r\n                  <input\r\n                    type='color'\r\n                    className=\"color-picker\"\r\n                    ref={fillColorRef}\r\n                    value={fillColor}\r\n                    onChangeCapture={(e) => setFillColor(e.target.value)}\r\n                  />\r\n                </> : null : null}\r\n            </div>\r\n          }\r\n        </div> : null\r\n      }\r\n    </div>\r\n  )\r\n}\r\nconst BoxTools = ({path, setPaths}) => {\r\n  console.log(path);\r\n  const [size, setSize] = useState(path.size)\r\n  const [fillColor, setFillColor] = useState(path.fill)\r\n  const [color, setColor] = useState(path.color)\r\n  const colorRef = useRef()\r\n  const fillColorRef = useRef()\r\n\r\nuseEffect(() => {\r\n  setPaths(prev=>{\r\n    prev[prev.length -1].color = color;\r\n    prev[prev.length -1].fill = fillColor;\r\n    prev[prev.length -1].size = size;\r\n   return [...prev] \r\n  })\r\n}, [color, fillColor,size])\r\n  \r\n  return (\r\n    <div className='box-tool'>\r\n      <div className='tool-row'>\r\n\r\n        <label htmlFor='stroke-size'>STROKE SIZE: </label>\r\n        <input\r\n          id='slider' type=\"range\" min=\"0\" max=\"50\"\r\n          className=\"slider\"\r\n          defaultValue={size}\r\n          onChange={(e) => setSize(e.target.value)}\r\n          onMouseUp={(e) => setSize(e.target.value)}\r\n        />\r\n\r\n      </div>\r\n      <div className='tool-row'>\r\n        <>\r\n          <label htmlFor='stroke-color'>STROKE: </label>\r\n          <input\r\n            type='color'\r\n            className=\"color-picker\"\r\n            ref={colorRef}\r\n            value={color} onChangeCapture={(e) => setColor(e.target.value)}\r\n            colorformat=\"rgba\"\r\n          />\r\n        </>\r\n        <>\r\n          <label htmlFor='fill-color'>FILL: </label>\r\n          <input\r\n            type='color'\r\n            className=\"color-picker\"\r\n            ref={fillColorRef}\r\n            value={fillColor}\r\n            onChangeCapture={(e) => setFillColor(e.target.value)}\r\n          />\r\n        </>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\nfunction App() {\r\n  const colorRef = useRef()\r\n  const canvasRef = useRef()\r\n  const height = window.innerHeight\r\n  const width = window.innerWidth\r\n  const [paths, setPaths] = useState([])\r\n  const [type, setType] = useState('brush')\r\n  const [color, setColor] = useState('#252525')\r\n  const [fillColor, setFillColor] = useState('#dbdbdb')\r\n  const fillColorRef = useRef()\r\n  const [size, setSize] = useState(10)\r\n  const [drawing, setDrawing] = useState()\r\n  const [bgColor, setBgColor] = useState('#fafafa')\r\n  const [keyCode, setKeyCode] = useState([])\r\n  const [idChoose, setIdChoose] = useState(null)\r\n  // const [boxTools, setBoxTools] = useState(null)\r\n  const [last, setLast] = useState({\r\n    x: width / 2,\r\n    y: height / 2\r\n  })\r\n  const ctx = useRef()\r\n  const navRef = useRef()\r\n  const [codec, setCodec] = useState('jpeg')\r\n  const [resolution, setResolution] = useState('32x32')\r\n  const [selects, setSelect] = useState([])\r\n  const lastPos = useRef()\r\n  useLayoutEffect(() => {\r\n\r\n    const canvas = canvasRef.current;\r\n    canvas.width = 300; canvas.height = 300;\r\n    ctx.current = canvas.getContext('2d');\r\n    redraw();\r\n\r\n  }, []);\r\n\r\n\r\n  const makeRect = (element, path) => {\r\n    element.strokeStyle = path.color\r\n    element.fillStyle = path.fill\r\n    element.lineWidth = path.size\r\n    ctx.current.beginPath()\r\n    element.fillRect(path.pos[0].x1, path.pos[0].y1, path.pos[0].x2 - path.pos[0].x1, path.pos[0].y2 - path.pos[0].y1);\r\n    element.strokeRect(path.pos[0].x1, path.pos[0].y1, path.pos[0].x2 - path.pos[0].x1, path.pos[0].y2 - path.pos[0].y1)\r\n    element.stroke();\r\n    element.closePath()\r\n  }\r\n\r\n  const makeCircle = (element, path) => {\r\n    element.strokeStyle = path.color\r\n    const X1 = path.pos[0].x1;\r\n    const X2 = path.pos[0].x2;\r\n    const Y1 = path.pos[0].y1;\r\n    const Y2 = path.pos[0].y2;\r\n    const subtractXs = X2 - X1;\r\n    const subtractYs = Y2 - Y1;\r\n    element.fillStyle = path.fill\r\n    element.lineWidth = path.size\r\n    ctx.current.beginPath()\r\n    element.ellipse(X1 + ((subtractXs) / 4),\r\n      Y1 + ((subtractYs) / 4),\r\n      subtractXs < 0 ? -1 * (subtractXs) : (subtractXs),\r\n      subtractYs < 0 ? -1 * (subtractYs) : (subtractYs), 0, 0, 2 * Math.PI);\r\n    element.stroke()\r\n    element.fill();\r\n    element.closePath()\r\n  }\r\n\r\n  const makeStroke = (element, path) => {\r\n    ctx.current.beginPath()\r\n    element.strokeStyle = path.color\r\n    element.lineWidth = path.size\r\n    element.moveTo(path.pos[0].x1, path.pos[0].y1)\r\n    element.lineTo(path.pos[0].x2, path.pos[0].y2)\r\n    element.stroke();\r\n    element.closePath()\r\n  }\r\n\r\n  const makePath = (element, path) => {\r\n    ctx.current.beginPath()\r\n    for (let i = 0; i < path.pos.length - 1; i++) {\r\n      if (path.pos[i + 1] !== undefined) {\r\n        element.strokeStyle = path.color\r\n        element.lineWidth = path.size\r\n        element.moveTo(path.pos[i].x, path.pos[i].y)\r\n        element.lineTo(path.pos[i + 1].x, path.pos[i + 1].y)\r\n        element.stroke()\r\n      }\r\n    }\r\n    element.closePath()\r\n  }\r\n\r\n\r\n  const makeConnectLine = (element, path) => {\r\n    element.beginPath();\r\n    element.moveTo(path.pos[0].x, path.pos[0].y)\r\n    for (let i = 0; i < path.pos.length - 1; i++) {\r\n      if (path.pos[i + 1] !== undefined) {\r\n        element.strokeStyle = path.color\r\n        element.fillStyle = path.fill\r\n        element.lineWidth = path.size\r\n        element.lineTo(path.pos[i].x, path.pos[i].y)\r\n        element.lineTo(path.pos[i + 1].x, path.pos[i + 1].y)\r\n        element.fill();\r\n        element.stroke()\r\n      }\r\n    }\r\n    element.closePath()\r\n  }\r\n\r\n  const onPaint = () => {\r\n    ctx.current.globalCompositeOperation = 'source-over'\r\n  }\r\n\r\n  function findDistance(x1, x2, y1, y2) {\r\n    const Distance = Math.sqrt((Math.pow((x2 - x1), 2) + Math.pow((y2 - y1), 2)))\r\n    return Distance\r\n\r\n  }\r\n\r\n  const mouseOver = (e) => {\r\n    let lastX = e.offsetX || (e.pageX - canvasRef.current.offsetLeft)\r\n    let lastY = e.ostartX || (e.pageY - canvasRef.current.offsetTop);\r\n  }\r\n  const startDrawing = (e) => {\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n\r\n    let lastX = e.offsetX || (e.pageX - canvasRef.current.offsetLeft)\r\n    let lastY = e.ostartX || (e.pageY - canvasRef.current.offsetTop);\r\n    lastPos.current = { startX: lastX, startY: lastY, endX: lastX, endY: lastY }\r\n    setLast(prev => {\r\n      prev.x = lastX\r\n      prev.y = lastY\r\n      return prev\r\n    })\r\n    // setPaths(prev => [...prev, { id: paths.length, color: color, type: type, size: size, pos: [{ x1: lastX, y1: lastY, x2: lastX, y2: lastY }] }])\r\n\r\n    // var position = ctx.current.transformedPoint(lastX, lastY);\r\n    setDrawing(true)\r\n    if (type === 'brush') {\r\n      setPaths(prev => [...prev,\r\n      {\r\n        id: paths.length,\r\n        color: color,\r\n        type: type,\r\n        size: size,\r\n        pos: [{ x: lastX, y: lastY }],\r\n        choose: false\r\n      }])\r\n    } else if (type === 'move') {\r\n      console.log(327, lastX, lastY)\r\n      // find paths in range; \r\n      paths.forEach((p, i) => {\r\n        console.log(p);\r\n        if (lastX > (p.pos[0].x1 || p.pos[0].x) &&\r\n          lastX < (p.pos[0].x2 || p.pos[0].x) &&\r\n          lastY > (p.pos[0].y1 || p.pos[0].y) &&\r\n          lastY < (p.pos[0].y2 || p.pos[0].y)\r\n        ) {\r\n          console.log('asddddddddddddddddd');\r\n          setSelect([{\r\n            id: 'select',\r\n            color: COLOR_PALLETE.blue,\r\n            type: type,\r\n            size: 4,\r\n            fill: 'rgba(0,0,0,0)',\r\n            pos: [{ x1: p.pos[0].x1 - (p.size / 2), y1: p.pos[0].y1 - (p.size / 2), x2: p.pos[0].x2 + (p.size / 2), y2: p.pos[0].y2 + (p.size / 2) }],\r\n            choose: false\r\n\r\n          }])\r\n          setPaths(prev => {\r\n            prev.forEach((p, j) => {\r\n              if (i == j) {\r\n                p.choose = true\r\n              } else {\r\n                p.choose = false\r\n              }\r\n            })\r\n            // prev[i].choose = true;\r\n            prev = moveAllUp(prev, i)\r\n            return [...prev];\r\n          })\r\n\r\n          setIdChoose(i)\r\n        }\r\n        //   console.log('p.pos.x', (p.pos[0].x1 || p.pos[0].x))\r\n      })\r\n    } else if (type === 'eraser') {\r\n\r\n    } else if (type === 'rect') {\r\n      setPaths(prev => [...prev,\r\n      {\r\n        id: paths.length,\r\n        color: color,\r\n        type: type,\r\n        size: size,\r\n        fill: fillColor,\r\n        pos: [{ x1: lastX, y1: lastY, x2: lastX, y2: lastY }],\r\n        choose: false\r\n\r\n      }])\r\n\r\n    } else if (type === 'circle') {\r\n      setPaths((prev) => [...prev,\r\n      {\r\n        id: paths.length,\r\n        color: color,\r\n        fill: fillColor,\r\n        type: type,\r\n        size: size,\r\n        pos: [{ x1: lastX, y1: lastY, x2: lastX, y2: lastY }]\r\n      }])\r\n    } else if (type === 'stroke') {\r\n      setPaths(prev => [...prev,\r\n      {\r\n        id: paths.length,\r\n        color: color,\r\n        type: type,\r\n        size: size,\r\n        pos: [{ x1: lastX, y1: lastY, x2: lastX, y2: lastY }],\r\n        choose: false\r\n\r\n      }])\r\n    } else if (type === 'connect') {\r\n      // console.log('connect');\r\n      // console.log(233, paths);\r\n      if (paths.length > 0) {\r\n        // console.log('connect  =  paths exist');\r\n\r\n        if (paths[paths.length - 1].type !== 'connect') {\r\n          // console.log(\"connect  =  paths exist : the last type is'nt connect\");\r\n\r\n          setPaths(prev => [...prev,\r\n          {\r\n            id: paths.length,\r\n            color: color,\r\n            fill: fillColor,\r\n            type: type,\r\n            size: size,\r\n            // pos: [{ x1: lastX, y1: lastY, x2: lastX, y2: lastY }]\r\n            pos: [{ x: lastX, y: lastY }],\r\n            choose: false\r\n\r\n\r\n          }])\r\n        } else {\r\n          // console.log(\"connect  =  paths exist : the last type is connect\");\r\n          const index = paths.length - 1;\r\n          const POS = paths[index].pos;\r\n          const LENGTH = POS.length;\r\n          const LAST = LENGTH - 1;\r\n          // console.log(fillColor);\r\n\r\n\r\n          const tgb = hexToRgb(fillColor)\r\n          // console.log(tgb);\r\n          if (POS[LAST].x === POS[0].x &&\r\n            POS[LAST].y === POS[0].y && LENGTH !== 1) {\r\n            setPaths(prev => [...prev, {\r\n              id: paths.length,\r\n              color: color,\r\n              fill: fillColor,\r\n              type: type,\r\n              size: size,\r\n              pos: [{ x: lastX, y: lastY }],\r\n              choose: false\r\n\r\n            }])\r\n          } else {\r\n\r\n\r\n            setPaths(prev => {\r\n              // console.log('state ', prev[index].pos);\r\n              // prev[index].pos.push({ x1: lastX, y1: lastY, x2: lastX, y2: lastY })\r\n              const temp = prev[prev.length - 1].pos\r\n              // prev[prev.length - 1].pos = [...temp,{ x1: temp[temp.length-1].x2, y1:temp[temp.length-1].y2, x2: lastX, y2: lastY }]\r\n              prev[prev.length - 1].pos = [...temp, { x: lastX, y: lastY }]\r\n\r\n              return [...prev]\r\n            })\r\n          }\r\n        }\r\n      } else {\r\n        // console.log(\"connect  =  paths empty\");\r\n\r\n        setPaths(prev => [\r\n          {\r\n            id: paths.length,\r\n            color: color,\r\n            fill: fillColor,\r\n            type: type,\r\n            size: size,\r\n            pos: [{ x: lastX, y: lastY }],\r\n            choose: false\r\n\r\n            // pos: [{ x1: lastX, y1: lastY, x2: lastX, y2: lastY }]\r\n\r\n          }])\r\n      }\r\n\r\n    }\r\n  }\r\n\r\n  const onDraw = (evt) => {\r\n    const lastX = evt.offsetX || (evt.pageX - canvasRef.current.offsetLeft);\r\n    const lastY = evt.offsetY || (evt.pageY - canvasRef.current.offsetTop);\r\n    setLast(prev => {\r\n      prev.x = lastX\r\n      prev.y = lastY\r\n      return prev\r\n    })\r\n    let XR, XL, YT, YB, rangX, rangY\r\n    if (selects.length > 0) {\r\n      const selectPos = selects[0].pos[0]\r\n      XR = (selectPos.x2 + 20 > lastX && selectPos.x2 - 20 < lastX)\r\n      YT = (selectPos.y1 + 20 > lastY && selectPos.y1 - 20 < lastY)\r\n      XL = (selectPos.x1 + 20 > lastX && selectPos.x1 - 20 < lastX)\r\n      YB = (selectPos.y2 + 20 > lastY && selectPos.y2 - 20 < lastY)\r\n      rangX = (selectPos.x1 < lastX && selectPos.x2 > lastX);\r\n      rangY = (selectPos.y2 > lastY && selectPos.y1 < lastY);\r\n      if (XR && YT) { // top right\r\n        arrowBox('ne')\r\n      } else if (XR && YB) { // bottom right\r\n        arrowBox('se')\r\n      } else if (XL && YT) { // top left\r\n        arrowBox('se')\r\n      } else if (XL && YB) { // bottom left\r\n        arrowBox('ne')\r\n      } else if (XR && rangY) { // right\r\n        arrowBox('e')\r\n      } else if (XL && rangY) { // lefft\r\n        arrowBox('e')\r\n      } else if (rangX && YB) { // bottom\r\n        arrowBox('n')\r\n      } else if (rangX && YT) { // top\r\n        arrowBox('n')\r\n      } else {\r\n        document.body.style.cursor = 'auto'\r\n      }\r\n    }\r\n    if (!drawing) return;\r\n    lastPos.current.startX = last.x\r\n    lastPos.current.startY = last.y\r\n    lastPos.current.endX = lastX\r\n    lastPos.current.endY = lastY\r\n\r\n    const DX = lastPos.current.endX - lastPos.current.startX\r\n    const DY = lastPos.current.endY - lastPos.current.startY\r\n\r\n\r\n    if (selects.length > 0) {\r\n      if (type === 'move') {\r\n\r\n        //loop all the object \r\n\r\n        const { x1, y1, x2, y2 } = paths[idChoose].pos[0]\r\n        const CDx = lastPos.current.startX - x1\r\n        const CDy = lastPos.current.startY - y1\r\n        if (XR && YT) { // top right\r\n          console.log('right top tuch ');\r\n          setPaths(prev => {\r\n            prev[prev.length - 1].pos[0].x2 += DX / 2\r\n            prev[prev.length - 1].pos[0].y1 += DY / 2\r\n            return [...prev]\r\n          })\r\n          setSelect(prev => {\r\n            prev[0].pos[0].x2 += DX / 2\r\n            prev[0].pos[0].y1 += DY / 2\r\n\r\n            return [...prev]\r\n          })\r\n        } else if (XR && YB) { // bottom right\r\n          console.log('right bottom tuch ');\r\n          setPaths(prev => {\r\n            prev[prev.length - 1].pos[0].x2 += DX / 2\r\n            prev[prev.length - 1].pos[0].y2 += DY / 2\r\n            return [...prev]\r\n          })\r\n          setSelect(prev => {\r\n            prev[0].pos[0].x2 += DX / 2\r\n            prev[0].pos[0].y2 += DY / 2\r\n\r\n            return [...prev]\r\n          })\r\n        } else if (XL && YT) { // top left\r\n          console.log('left top tuch ');\r\n          setPaths(prev => {\r\n            prev[prev.length - 1].pos[0].x1 += DX / 2\r\n            prev[prev.length - 1].pos[0].y1 += DY / 2\r\n            return [...prev]\r\n          })\r\n          setSelect(prev => {\r\n            prev[0].pos[0].x1 += DX / 2\r\n            prev[0].pos[0].y1 += DY / 2\r\n\r\n            return [...prev]\r\n          })\r\n        } else if (XL && YB) { // bottom left\r\n          console.log('left bottom tuch ');\r\n          setPaths(prev => {\r\n            prev[prev.length - 1].pos[0].x1 += DX / 2\r\n            prev[prev.length - 1].pos[0].y2 += DY / 2\r\n            return [...prev]\r\n          })\r\n          setSelect(prev => {\r\n            prev[0].pos[0].x1 += DX / 2\r\n            prev[0].pos[0].y2 += DY / 2\r\n            return [...prev]\r\n          })\r\n        } else if (XR && rangY) { // right\r\n          console.log('right');\r\n          console.log(lastX, lastY);\r\n          setPaths(prev => {\r\n            prev[prev.length - 1].pos[0].x2 += DX / 2\r\n            return [...prev]\r\n          })\r\n          setSelect(prev => {\r\n            prev[0].pos[0].x2 += DX / 2\r\n            return [...prev]\r\n          })\r\n        } else if (XL && rangY) { // lefft\r\n          console.log('left');\r\n          console.log(lastX, lastY);\r\n          setPaths(prev => {\r\n            prev[prev.length - 1].pos[0].x1 += DX / 2\r\n            return [...prev]\r\n          })\r\n          setSelect(prev => {\r\n            prev[0].pos[0].x1 += DX / 2\r\n            return [...prev]\r\n          })\r\n        } else if (rangX && YB) { // bottom\r\n          console.log('bottom');\r\n          setPaths(prev => {\r\n            prev[prev.length - 1].pos[0].y2 += DY / 2\r\n            return [...prev]\r\n          })\r\n          setSelect(prev => {\r\n            prev[0].pos[0].y2 += DY / 2\r\n            return [...prev]\r\n          })\r\n        } else if (rangX && YT) { // top\r\n          console.log('top');\r\n          setPaths(prev => {\r\n            prev[prev.length - 1].pos[0].y1 += DY / 2\r\n            return [...prev]\r\n          })\r\n          setSelect(prev => {\r\n            prev[0].pos[0].y1 += DY / 2\r\n            return [...prev]\r\n          })\r\n        } else {\r\n\r\n\r\n          setPaths(prev => {\r\n            const { startX, endX, startY, endY } = lastPos.current\r\n            const A = startX - x1\r\n            const B = startY - y1\r\n            const C = x2 - startX\r\n            const D = y2 - startY\r\n            prev[idChoose].pos = [{ x1: endX - A, y1: endY - B, x2: endX + C, y2: endY + D }]\r\n            return [...prev];\r\n          })\r\n\r\n          setSelect(prev => {\r\n            prev[0].pos = [{ x1: x1 + DX - (prev[0].size), y1: y1 + - (prev[0].size), x2: x2 + DX + (prev[0].size), y2: y2 + DY + (prev[0].size) }]\r\n            return prev;\r\n          })\r\n        }\r\n      }\r\n    } else {\r\n\r\n      let shift = keyCode[0] == 16 ? true : false\r\n      const { x1, y1 } = paths[paths.length - 1].pos[0];\r\n      let pos;\r\n\r\n      if (type === 'brush') {\r\n        pos = { x: last.x, y: last.y }\r\n\r\n        setPaths((prev) => {\r\n          const temp = prev[prev.length - 1].pos\r\n          prev[prev.length - 1].pos = [...temp, { x: last.x, y: last.y }]\r\n          return [...prev]\r\n        })\r\n      } else if (type === 'connect') {\r\n\r\n        // setPaths((prev) => {\r\n        //   const temp = prev[prev.length - 1].pos\r\n        //   prev[prev.length - 1].pos = [...temp, { x1, y1, x2: last.x, y2: last.y }]\r\n        //   return [...prev]\r\n        // })\r\n      } else {\r\n        if (type === 'move') {\r\n\r\n          //loop all the object \r\n\r\n          const { x1, y1, x2, y2 } = paths[idChoose].pos[0]\r\n          const CDx = lastPos.current.startX - x1\r\n          const CDy = lastPos.current.startY - y1\r\n\r\n          // setPaths(prev => {\r\n          //   console.log(prev[idChoose].pos)\r\n          //   // const {x1,y1,x2,y2} = prev[idChoose].pos[0]\r\n\r\n          //   console.log('dx:', DX, 'dy:', DY)\r\n          //   console.log('x1:', x1);\r\n          //   console.log('x2:', x2);\r\n          //   console.log('y1:', y1);\r\n          //   console.log('y2:', y2);\r\n          //   const { startX, endX, startY, endY } = lastPos.current\r\n          //   const A = startX - x1\r\n          //   const B = startY - y1\r\n          //   const C = x2 - startX\r\n          //   const D = y2 - startY\r\n          //   console.log(537, A, B, C, D);\r\n          //   console.log(x1, y1, x2, y2)\r\n          //   console.log(x1 + DX);\r\n          //   // prev[idChoose].pos=[{x1:lastPos.current.endX - CDx  , y1:lastPos.current.endY - CDy, x2 :lastPos.current.endX + x2 - lastPos.current.startX, y2: lastPos.current.endY + y2-lastPos.current.startY}]\r\n          //   prev[idChoose].pos = [{ x1: endX - A, y1: endY - B, x2: endX + C, y2: endY + D }]\r\n          //   return [...prev];\r\n          // })\r\n\r\n          // setSelect(prev => {\r\n          //   prev[0].pos = [{ x1: x1 + DX - (prev[0].size), y1: y1 + - (prev[0].size), x2: x2 + DX + (prev[0].size), y2: y2 + DY + (prev[0].size) }]\r\n          //   return prev;\r\n          // })\r\n\r\n        } else {\r\n\r\n          if (type === 'eraser') {\r\n\r\n          } else if (type === 'rect') {\r\n            pos = [{ x1, y1: shift ? x1 : y1, x2: last.x, y2: shift ? last.x : last.y }]\r\n          } else if (type === 'circle') {\r\n            pos = [{ x1, y1: shift ? x1 : y1, x2: last.x, y2: shift ? last.x : last.y }]\r\n          } else if (type === 'stroke') {\r\n            pos = [{ x1, y1, x2: last.x, y2: last.y }]\r\n          }\r\n\r\n\r\n          setPaths(prev => {\r\n            prev[prev.length - 1].pos = pos\r\n            return [...prev];\r\n          })\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const endDrawing = () => {\r\n    setDrawing(false)\r\n    // lastPos.current={}\r\n  }\r\n\r\n  const onMouseLeave = (e) => {\r\n\r\n  }\r\n\r\n  function redraw() {\r\n    // console.log(paths);\r\n    ctx.current.fillStyle = bgColor\r\n    ctx.current.lineCap = \"round\"\r\n    ctx.current.lineJoin = \"round\"\r\n    ctx.current.fillRect(0, 0, ctx.current.canvas.width, ctx.current.canvas.height);\r\n\r\n    if (paths.length > 0) {\r\n      paths.forEach(p => {\r\n        // console.log(p)\r\n        if (p.type == 'rect') {\r\n          makeRect(ctx.current, p)\r\n        } else if (p.type == 'circle') {\r\n          makeCircle(ctx.current, p)\r\n        } else if (p.type == 'stroke') {\r\n          makeStroke(ctx.current, p)\r\n        } else if (p.type == 'brush') {\r\n          makePath(ctx.current, p)\r\n        } else if (p.type == 'connect') {\r\n\r\n          makeConnectLine(ctx.current, p)\r\n        }\r\n      })\r\n    }\r\n    console.log(selects)\r\n    if (selects.length > 0) {\r\n      console.log('select: ', selects);\r\n      makeRect(ctx.current, selects[0])\r\n\r\n\r\n    }\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (type !== 'move') {\r\n      setSelect([])\r\n    }\r\n  }, [type])\r\n  useEffect(() => {\r\n    redraw()\r\n    var image = new Image()\r\n    var img = ctx.current.canvas.toDataURL(\"image/jpeg\");\r\n    image.src = img\r\n    const fav = document.getElementById('favicon');\r\n    fav.href = img\r\n  }, [bgColor, paths, selects])\r\n\r\n  useEffect(() => {\r\n    ctx.current.lineCap = \"round\"\r\n    ctx.current.lineJoin = \"round\"\r\n    ctx.current.strokeStyle = color\r\n    ctx.current.fillStyle = fillColor\r\n    ctx.current.lineWidth = size\r\n  }, [color, size, fillColor])\r\n\r\n\r\n  useEffect(() => {\r\n    console.log(keyCode);\r\n    if (keyCode.length > 0) {\r\n      if (keyCode[0] === 17 && keyCode[1] === 13) {\r\n        if (paths[paths.length - 1].type === 'connect') {\r\n          setPaths(prev => {\r\n            prev[prev.length - 1].pos.push({ x: prev[prev.length - 1].pos[0].x, y: prev[prev.length - 1].pos[0].y })\r\n            return [...prev]\r\n          })\r\n        }\r\n        setKeyCode([])\r\n      } else if (keyCode[0] === 17 && keyCode[1] === 90) {\r\n        const temp = [...paths]\r\n        temp.pop()\r\n        setPaths()\r\n      } else if (keyCode[0] === 46 && keyCode.length === 1) {\r\n        paths.forEach((p, i) => {\r\n          console.log(671, i, p)\r\n          if (p.choose === true) {\r\n            console.log('choose :', i)\r\n            const temp = [...paths]\r\n            temp.pop()\r\n            // const temp  = paths.pop()\r\n            setPaths(temp)\r\n            setSelect([])\r\n          }\r\n        })\r\n      }\r\n\r\n    }\r\n  }, [keyCode, paths])\r\n  useEffect(() => {\r\n    const keydown = (e) => {\r\n      // console.log(415, keyCode, paths);\r\n      setKeyCode(prev => {\r\n        const check = prev.findIndex(p => p === e.keyCode)\r\n        // console.log(check);\r\n        if (check == -1) {\r\n          return [...prev, e.keyCode]\r\n        } else {\r\n          return [...prev]\r\n        }\r\n      })\r\n    }\r\n    const keyup = (e) => {\r\n      setKeyCode([])\r\n    }\r\n    document.addEventListener('keydown', keydown)\r\n    document.addEventListener('keyup', keyup)\r\n\r\n    return () => {\r\n      document.removeEventListener('keydown', keydown)\r\n      document.removeEventListener('keyup', keyup)\r\n    }\r\n  })\r\n  const downlaod_img = (el) => {\r\n    // get image URI from canvas object\r\n    //  var imageURI = ctx.current.canvas.toDataURL(\"image/jpg\");\r\n    //  el.href = imageURI;\r\n    var image = new Image()\r\n    var img = ctx.current.canvas.toDataURL();\r\n    const a = document.createElement('a')\r\n    a.href = img;\r\n    a.download = `favicon.${codec}`;\r\n    a.click();\r\n  }\r\n\r\n  const clearRect = () => {\r\n    ctx.current.clearRect(0, 0, ctx.current.canvas.width, ctx.current.canvas.height)\r\n    setPaths([])\r\n  }\r\n\r\n  const undo = () => {\r\n    const temp = [...paths]\r\n    temp.pop()\r\n    setPaths(temp)\r\n  }\r\n  //   useEffect(() => {\r\n  //  if(selects.length > 0){\r\n\r\n\r\n  //    setBoxTools(<div className='box-tool'>\r\n  //    <div className='tool-row'>\r\n\r\n  //      <label htmlFor='stroke-size'>STROKE SIZE: </label>\r\n  //      <input\r\n  //        id='slider' type=\"range\" min=\"0\" max=\"50\"\r\n  //        className=\"slider\"\r\n  //        defaultValue={size}\r\n  //        onChange={(e) => setSize(e.target.value)}\r\n  //        onMouseUp={(e) => setSize(e.target.value)}\r\n  //      />\r\n\r\n  //    </div>\r\n  //      <div className='tool-row'>\r\n  //        <>\r\n  //          <label htmlFor='stroke-color'>STROKE: </label>\r\n  //          <input\r\n  //            type='color'\r\n  //            className=\"color-picker\"\r\n  //            ref={colorRef}\r\n  //            value={color} onChangeCapture={(e) => setColor(e.target.value)}\r\n  //            colorformat=\"rgba\"\r\n  //          />\r\n  //        </>\r\n  //          <>\r\n  //            <label htmlFor='fill-color'>FILL: </label>\r\n  //            <input\r\n  //              type='color'\r\n  //              className=\"color-picker\"\r\n  //              ref={fillColorRef}\r\n  //              value={fillColor}\r\n  //              onChangeCapture={(e) => setFillColor(e.target.value)}\r\n  //            />\r\n  //          </> \r\n  //      </div>\r\n  //  </div>)\r\n  //  }\r\n  //   }, [selects])\r\n  return (\r\n    <div className=\"App\">\r\n      {selects.length > 0 && <BoxTools path={paths[paths.length -1]} setPaths={setPaths}/>}\r\n      <NavBar\r\n        navRef={navRef}\r\n        fillColor={fillColor}\r\n        fillColorRef={fillColorRef}\r\n        setFillColor={setFillColor}\r\n        clearRect={clearRect}\r\n        setType={setType}\r\n        type={type}\r\n        setColor={setColor}\r\n        colorRef={colorRef}\r\n        ctx={ctx}\r\n        color={color}\r\n        bgColor={bgColor}\r\n        setBgColor={setBgColor}\r\n        setSize={setSize}\r\n        size={size}\r\n        setCodec={setCodec}\r\n        setResolution={setResolution}\r\n        codec={codec}\r\n        resolution={resolution}\r\n        undo={undo}\r\n      />\r\n      <h1> FAVICION EASLY </h1>\r\n      <canvas\r\n        ref={canvasRef}\r\n        width={500}\r\n        height={500}\r\n        ref={canvasRef}\r\n        onKeyPressCapture={(e) => setKeyCode(e)}\r\n        onMouseDown={startDrawing}\r\n        mouseOver={mouseOver}\r\n        onMouseMove={onDraw}\r\n        onMouseUp={endDrawing}\r\n        onMouseLeave={(e) => onMouseLeave(e)}\r\n      >\r\n      </canvas>\r\n      <div style={{ width: '100%', display: 'flex', justifyContent: 'center', alignItems: 'center' }}>\r\n\r\n        <div id=\"download\" style={{ width: CANVAS_WIDTH }} onClick={() => {\r\n          downlaod_img()\r\n        }}>download</div>\r\n      </div>\r\n      <div className='img-bg'></div>\r\n\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}